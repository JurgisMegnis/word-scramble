/* colors */
$base-dark: #030616;
$base-light: #F2F5F9;
$grey-100: #97A3B6;
$grey-200: #4A5567;
$purple-dark: #672171;
$purple-dark-100: #67217160;
$purple-medium: #7429C6;
$purple-light: #C951E7;
$success: #70DC96;
$error: #EB5656;

/* typography */ 
@mixin txt-large {
    font-family: "Outfit", serif;
    font-size: 2rem;
    font-weight: 500;
}

@mixin txt-medium {
    font-family: "Outfit", serif;
    font-size: 1.25rem;
    font-weight: 500;
}

@mixin txt-small {
    font-family: "Outfit", serif;
    font-size: 0.75rem;
    font-weight: 400;
}

@mixin txt-button {
    font-family: "Outfit", serif;
    font-size: 0.875rem;
    font-weight: 500;
}

/* reset */ 
/* 1. Use a more-intuitive box-sizing model */
*, *::before, *::after {
    box-sizing: border-box;
  }
  /* 2. Remove default margin */
  * {
    margin: 0;
    padding: 0;
  }
  body {
    /* 3. Add accessible line-height */
    line-height: 1.5;
    /* 4. Improve text rendering */
    -webkit-font-smoothing: antialiased;
  }
  /* 5. Improve media defaults */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  /* 6. Inherit fonts for form controls */
  input, button, textarea, select {
    font: inherit;
  }
  /* 7. Avoid text overflows */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  /* 8. Improve line wrapping */
  p {
    text-wrap: pretty;
  }
  h1, h2, h3, h4, h5, h6 {
    text-wrap: balance;
  }
  /*
    9. Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }

/* animations */

@keyframes slideIn {
    from {
        transform: translateX(100%);
    }
    to {
        transform: translateX(0);
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes slideInY {
    from {
        transform: translateY(-100%);
    }
    to {
        transform: translateY(0);
    }
}

@keyframes shake {
    0% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    50% { transform: translateX(10px); }
    75% { transform: translateX(-10px); }
    100% { transform: translateX(0); }
}

@keyframes flashAnimation {
    0% {
        border-color: $grey-200;
        background-color: $base-dark;
    }
    50% {
        border-color: $error; 
        background-color: rgba($error, 0.1); 
    }
    100% {
        border-color: $grey-200;
        background-color: $base-dark;
    }
}

/* toasts */
.error-message {
    @include txt-medium();
    position: fixed;
    top: 20px;
    right: 20px;
    background-color:$error;
    color: white;
    padding: 15px;
    border-radius: 5px;
    animation: 
        slideIn 0.5s,
        fadeOut 0.3s 4.7s;
}

.toast-success {
    @include txt-medium();
    position: absolute;
    z-index: -1;
    top: 98%; 
    background-color: $purple-medium;
    width: 420px;
    padding: 1rem;
    border-radius: 0 0 8px 8px;
    text-align: center;
    color: $purple-light;
    animation: 
        slideInY .5s,
        fadeOut .3s 1.25s;
}

.toast-error {
    @include txt-medium();
    position: absolute;
    z-index: -1;
    top: 98%; 
    background-color: $error;
    width: 420px;
    padding: 1rem;
    border-radius: 0 0 8px 8px;
    text-align: center;
    color: $base-light;
    animation: 
        slideInY .5s,
        fadeOut .3s 1.25s;
}

body {
    min-height: 100svh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    //gap: 1rem;
    background-image: url(../images/bg-guess-the-word.png);
    background-size: cover;
}

.game-container {
    width: 90%;
    max-width: 420px;
    background-color: $base-dark;
    padding: 32px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    border-radius: 12px;
    position: relative;
}

.word-container {
    width: 100%;
    background-color: $grey-200;
    padding: .5rem 0 .5rem 0;
    border-radius: 4px;

    h1 {
        @include txt-large();
        color: $grey-100;
        width: fit-content;
        margin: 0 auto;
        letter-spacing: 1rem;
    }
}

.score-container {
    display: flex;
    justify-content: space-between;
    width: 70%;

    p {
        @include txt-small();
        color: $grey-200;
        vertical-align: center;

        span {
            @include txt-button();
            color: $grey-100;
        }
    }

    .tries-container {
        position: relative;
        display: flex;
        align-items: center;

        ol, li {
            display: inline-block;
        }

        ol {
            display: flex;
            align-items: center;
            margin-left: 8px;
        }

        li {
            width: 6px;
            height: 6px;
            background-color: $grey-200;
            border-radius: 50%;
            margin-right: 8px;

            &.filled {
                background-color: $purple-medium;
            }
        }

    }
}

.inputs {
    margin: 2rem 0 1rem 0;

    input {
        width: 42px;
        height: 39px;
        background-color: $base-dark;
        border: 2px solid $grey-200;
        border-radius: 6px;
        margin-right: 4px;
        color: $base-light;
        @include txt-medium();
        text-align: center;
        caret-color: transparent;
        line-height: 39px;

        &:focus {
            outline:none;
            border-color: $purple-dark;
        }
    }
}

/* these animations is displayed when user checks a word that doesn't match the original word */
.shake {
    animation: shake 0.3s ease-in-out;
}

.flash {
    animation: flashAnimation 0.7s;
}

.buttons {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

button {
    @include txt-button();

    &.primary {
        padding: .5rem 24px .5rem 24px;
    
        color: $base-light;
        border-radius: 8px;
        background-color: $purple-light;
        border: none;
        box-shadow: 0 4px 0 $purple-dark;
        display: flex;
        align-items: center;
        gap: 16px;
        transition: background-color .2s ease-in-out;

        svg {
            fill: $purple-medium;
        }

        &:hover {
            background-color: change-color($purple-light, $alpha: 0.9);
        }

        &:active {
            box-shadow: 0 0 0 $purple-dark;
            transform: translateY(4px);
        }
    }

    &.secondary {
        padding: .5rem 24px .5rem 24px;
        border: none;
        background-color: transparent;
        color: $purple-light;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        transition: background-color .2s ease-in-out;

        svg {
            fill: $purple-light;

            &.animate {
                transition: rotate .5s ease-in-out;
                rotate: 360deg;
            }
        }

        &:hover {
            background-color: $purple-dark-100;
        }
    }

    &:hover {
        cursor: pointer;
    }
}

.game-over {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0; 
    left: 0; 
    z-index: 10;
    background-color: rgba($base-dark, 0.7); 
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(10px); // For Safari support
    border-radius: 12px; 
    padding: 32px; 

    img, 
    h1,
    p,
    button {
        margin: 0 auto;
        width: fit-content;
        text-align: center;
    }

    img {
        width: 40%;
        margin-bottom: 2rem;
        margin-top: 1rem;
    }

    h1 {
        @include txt-large();
        color: $purple-light;
    }

    p {
        @include txt-medium();
        color: $base-light;
    }

    button {
        margin-top: 3rem;
    }
}

@media (max-width: 640px) {
    .game-container {
        padding: 32px 16px 32px 16px;
    }

    .score-container {
        width: 90%;
    }
}

@media (max-width: 370px) {
    .inputs {
        input {
            width: 35px;
            height: 32px;
        }
    }
}